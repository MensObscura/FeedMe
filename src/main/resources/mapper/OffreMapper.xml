<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fil.iagl.iir.dao.offre.OffreDao">

	<resultMap type="fil.iagl.iir.entite.Offre" id="Offre_ResultMap">
		<id property="id" column="off_id" />
		<result property="dateCreation" column="off_date_creation" />
		<result property="titre" column="off_titre" />
		<result property="prix" column="off_prix" />
		<result property="nombrePersonne" column="off_nombre_personne" />
		<result property="dureeMinute" column="off_duree_minute" />
		<result property="dateRepas" column="off_date_repas" />
		<result property="note" column="off_note" />
		<result property="menu.plat" column="off_plat" />
		<result property="menu.dessert" column="off_dessert" />
		<result property="menu.boisson" column="off_boisson" />
		<result property="menu.entree" column="off_entree" />
		<result property="ageMin" column="off_age_min" />
		<result property="ageMax" column="off_age_max" />
		<result property="animaux" column="off_animaux" />
		<result property="premium" column="off_premium" />

		<association property="adresse" column="off_adr_id"
			select="fil.iagl.iir.dao.adresse.AdresseDao.getById" />
		<association property="typeCuisine" column="off_typ_id"
			select="fil.iagl.iir.dao.typeCuisine.TypeCuisineDao.getById" />
		<association property="hote" column="off_usr_id"
			select="fil.iagl.iir.dao.particulier.ParticulierDao.getParticulierByUtilisateurId" />

		<collection property="reservations" column="off_id"
			select="fil.iagl.iir.dao.reservation.ReservationDao.getAllByIdOffre"></collection>
		<collection property="images" column="off_id"
			select="fil.iagl.iir.dao.image.ImageDao.getAllByIdOffre"></collection>
	</resultMap>

	<sql id="select_all_columns_offre">
		SELECT
		off_id,
		off_date_creation,
		off_titre,
		off_prix,
		off_nombre_personne,
		off_duree_minute,
		off_date_repas,
		off_note,
		off_plat,
		off_dessert,
		off_entree,
		off_boisson,
		off_age_min,
		off_age_max,
		off_animaux,
		off_adr_id,
		off_typ_id,
		off_usr_id,
		off_premium
		FROM OFFRE
	</sql>
	
	<sql id="select_all_columns_offre_jointure_ville_particulier">
		SELECT
		off_id,
		off_date_creation,
		off_titre,
		off_prix,
		off_nombre_personne,
		off_duree_minute,
		off_date_repas,
		off_note,
		off_plat,
		off_dessert,
		off_entree,
		off_boisson,
		off_age_min,
		off_age_max,
		off_animaux,
		off_adr_id,
		vil_nom,
		vil_cp,
		prt_date_naissance,
		off_typ_id,
		off_usr_id,
		off_premium
		FROM OFFRE o1
			INNER JOIN ADRESSE ON ( off_adr_id = adr_id ) 
			INNER JOIN VILLE ON ( adr_vil_id = vil_id )
			INNER JOIN PARTICULIER ON ( off_usr_id = prt_usr_id )
	</sql>

	<select id="getAll" resultMap="Offre_ResultMap">
		<include refid="select_all_columns_offre" />	
		WHERE off_date_repas > current_date
		ORDER BY off_premium DESC
	</select>

	<select id="getOffresPremium" resultMap="Offre_ResultMap">
		<include refid="select_all_columns_offre" />
		WHERE off_premium = TRUE
	</select>

	<select id="getById" resultMap="Offre_ResultMap">
		<include refid="select_all_columns_offre" />
		WHERE off_id = #{id}
	</select>
	
	<select id="rechercher" resultMap="Offre_ResultMap">
		<include refid="select_all_columns_offre_jointure_ville_particulier"/>
		WHERE
			unaccent(lower(replace(off_titre, ' ', ''))) LIKE '%' || unaccent(lower(replace(#{filtres.global}, ' ', ''))) || '%'
			<if test="filtres.date != null">
				AND off_date_repas::date = #{filtres.date}
			</if>
			<if test="filtres.villeOuCP != null">
				AND ((unaccent(lower(replace(vil_nom, ' ', ''))) LIKE '%' || unaccent(lower(replace(#{filtres.villeOuCP}, ' ', ''))) || '%') OR vil_cp = #{filtres.villeOuCP})
			</if>
			<if test="filtres.idTypeCuisine != null">
				AND off_typ_id = #{filtres.idTypeCuisine}
			</if>
			<if test="filtres.animaux != null">
				AND off_animaux = #{filtres.animaux}
			</if>
			<if test="filtres.premium != null">
				AND off_premium = #{filtres.premium}
			</if>
			<if test="filtres.prixMin != null">
				AND off_prix >= #{filtres.prixMin}
			</if>
			<if test="filtres.prixMax != null">
				AND #{filtres.prixMax} >= off_prix
			</if>
			<if test="filtres.dureeMin != null">
				AND off_duree_minute >= #{filtres.dureeMin}
			</if>
			<if test="filtres.dureeMax != null">
				AND #{filtres.dureeMax} >= off_duree_minute
			</if>
			<if test="filtres.ageValide != null">
				AND EXISTS (
					SELECT * 
					from PARTICULIER 
					WHERE prt_usr_id = #{filtres.idUtilisateurConnecte} 
					AND (CURRENT_DATE - prt_date_naissance)/365 BETWEEN off_age_min AND off_age_max
				) 
			</if>
			<if test="filtres.nbPlaceRestanteMinimum != null">
				AND (
					SELECT COALESCE(
						(
							SELECT (off_nombre_personne - sum(res_nb_places)) >= #{filtres.nbPlaceRestanteMinimum}
							FROM RESERVATION 
							WHERE res_off_id = off_id 
						), 
						(
							SELECT off_nombre_personne >= #{filtres.nbPlaceRestanteMinimum}
						)
					)
				)	
			</if>
			<if test="filtres.noteMinimal != null">
				AND ( SELECT COALESCE(
					(SELECT AVG(vot_note) 
					FROM VOTE 
						INNER JOIN OFFRE o2 ON ( o2.off_id = vot_off_id )
					WHERE o1.off_usr_id = o2.off_usr_id), 0 )
				) >= #{filtres.noteMinimal} 	
			</if>
	</select>


	<insert id="sauvegarder" parameterType="fil.iagl.iir.entite.Offre"
		useGeneratedKeys="true" keyProperty="offre.id" keyColumn="off_id">
		INSERT INTO
		offre(
		off_date_creation,
		off_titre,
		off_prix,
		off_nombre_personne,
		off_duree_minute,
		off_date_repas,
		off_note,
		off_plat,
		off_dessert,
		off_entree,
		off_boisson,
		off_age_min,
		off_age_max,
		off_animaux,
		off_adr_id,
		off_typ_id,
		off_usr_id,
		off_premium
		)
		VALUES (
		CURRENT_DATE,
		#{offre.titre},
		#{offre.prix},
		#{offre.nombrePersonne},
		#{offre.dureeMinute},
		#{offre.dateRepas},
		#{offre.note},
		#{offre.menu.plat},
		#{offre.menu.dessert},
		#{offre.menu.entree},
		#{offre.menu.boisson},
		#{offre.ageMin},
		#{offre.ageMax},
		#{offre.animaux},
		#{offre.adresse.id},
		#{offre.typeCuisine.id},
		#{offre.hote.idUtilisateur},
		#{offre.premium}
		);
	</insert>
	
	<select id="getOffresParticipeUserConnecte" resultMap="Offre_ResultMap">
		<include refid="select_all_columns_offre" />
		INNER JOIN reservation on (reservation.res_off_id = offre.off_id )
		WHERE (current_timestamp >= off_date_repas) and res_con_id = #{idUtilisateurConnecte}
	</select>
	
	<select id="getAllOffresByHote" resultMap="Offre_ResultMap">
		<include refid="select_all_columns_offre" />
		WHERE off_usr_id = #{idUtilisateur}
	</select>
	
	<select id="getOffresEnCoursByHote" resultMap="Offre_ResultMap">
		<include refid="select_all_columns_offre" />
		WHERE (off_date_repas > current_timestamp) and off_usr_id = #{idUtilisateur}
	</select>
	
	<update id="modifier">
		UPDATE offre 
		SET
			off_titre = #{offre.titre},
			off_prix = #{offre.prix},
			off_nombre_personne = #{offre.nombrePersonne},
			off_duree_minute = #{offre.dureeMinute},
			off_date_repas = #{offre.dateRepas},
			off_note = #{offre.note},
			off_plat = #{offre.menu.plat},
			off_dessert = #{offre.menu.dessert},
			off_entree = #{offre.menu.entree},
			off_boisson = #{offre.menu.boisson},
			off_age_min = #{offre.ageMin},
			off_age_max = #{offre.ageMax},
			off_animaux = #{offre.animaux},
			off_adr_id = #{offre.adresse.id},
			off_typ_id = #{offre.typeCuisine.id},
			off_premium  = #{offre.premium}
		WHERE off_id = #{offre.id}
	</update>

</mapper>